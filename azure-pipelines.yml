trigger:
  branches:
    include:
      - main

variables:
  - name: AZURE_WEBAPP_NAME
    value: 'foot-traffic'   # your Azure Web App name
  - name: AZURE_SERVICE_CONNECTION
    value: 'foot-traffic'   # name of your service connection
  - name: PYTHON_VERSION
    value: '3.10'

stages:
- stage: BuildAndDeploy
  displayName: 'Build and Deploy Flask App'
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    # 1️⃣ Checkout source code
    - checkout: self
      displayName: 'Checkout source code'

    # 2️⃣ Set Python version
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
      displayName: 'Set up Python $(PYTHON_VERSION)'

    # 3️⃣ Install dependencies
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    # 4️⃣ Archive the project
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(AZURE_WEBAPP_NAME).zip'
        replaceExistingArchive: true
      displayName: 'Archive project files'

    # 5️⃣ Deploy to Azure Web App
    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'foot-traffic'  # must match your service connection name in DevOps
        appType: 'webAppLinux'             # ⚠️ use 'webAppLinux' if you deployed Flask on Linux
        appName: 'foot-traffic'            # exact Azure Web App name
        package: '$(Build.ArtifactStagingDirectory)/$(AZURE_WEBAPP_NAME).zip'
      displayName: 'Deploy to Azure Web App'
